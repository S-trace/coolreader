apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "org.coolreader"
        minSdkVersion 3
        targetSdkVersion 23
        versionCode 1021
        versionName "3.1.2-121"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_TOOLCHAIN=clang"
                cppFlags ""
            }
        }
    }
    sourceSets {
        main {
            setRoot('src/main')
            aidl.srcDirs = ['src/main/aidl']
            java.srcDirs = ['../../android/src']
            res.srcDirs = ['../../android/res']
            jni.srcDirs = ['../../android/jni']
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a' //select ABIs to build APKs for
            universalApk true //generate an additional APK that contains all the ABIs
        }
    }

    // map for the version code
    project.ext.versionCodes = [
            'armeabi': 1,
            'armeabi-v7a': 2,
            'arm64-v8a': 3,
            'mips': 5,
            'mips64': 6,
            'x86': 8,
            'x86_64': 9
    ]

    android.applicationVariants.all { variant ->
        // assign different version code for each output
        variant.outputs.each {
            output -> output.versionCodeOverride =
                project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) \
                * 1000000 + android.defaultConfig.versionCode
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    lintOptions {
        disable 'MissingTranslation'
    }

    useLibrary 'org.apache.http.legacy'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
